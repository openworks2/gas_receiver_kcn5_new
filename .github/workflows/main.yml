name: Gas Cloud Server

on:
  push:
    branches: [main]

env:
  ECS_SERVICE: ${{ vars.ECS_SERVICE }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  CONTAINER_NAME: ${{ vars.CONTAINER_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # 30 minutes

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: log env
        run: |
          echo ${{ env.MY_AWS_REGION }}
          echo ${{ vars.MY_AWS_REGION }}
          echo ${{ secrets.AWS_ACCESS_KEY_ID }}
          echo ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          echo ECS_SERVICE
          echo ECS_CLUSTER
          echo CONTAINER_NAME

      # - name: Set up environment file
      #   run: |
      #     echo MONGO_URL=${{ vars.MONGO_URL }} >> .env
      #     echo REDIS_URL=${{ vars.REDIS_URL }} >> .env
      #     echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
      #     echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: AKIATCKAMRV3SPEJRRNN
          aws-secret-access-key: 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
          aws-region: ap-northeast-2

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: true
      #     tags: 211125308791.dkr.ecr.ap-northeast-2.amazonaws.com/gas-ecr-repo:latest

      # - name: Update ECS service
      #   run: |
      #     aws ecs update-service --cluster GasCluster --service GasClusterService --force-new-deployment
